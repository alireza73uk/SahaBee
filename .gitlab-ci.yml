stages:
  - prepare
  - build
  - test
  - release
  - deploy

variables:
  DOCKER_REGISTRY: "registry.gitlab.com"
  TEST_IMAGE: "$DOCKER_REGISTRY/$DOCKER_USERNAME/sahabee/test:0.1.0"
  API_IMAGE_NAME: "registry.gitlab.com/emran.bm/sahabee/api"
  API_IMAGE_RELEASE_VERSION: "0.1.0"
  DEPLOYMENT_DOCKER: "${DOCKER_REGISTRY}/$DOCKER_USERNAME/sahabee/deployment-image:0.2.0"

create-deployment-image:
  stage: prepare
  image: docker:19.03.5
  services:
      - docker:19.03.5-dind
  tags:
      - docker
  script:
    - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin $DOCKER_REGISTRY
    - cd deployment/
    - docker build -t $DEPLOYMENT_DOCKER .
    - docker push $DEPLOYMENT_DOCKER
  when: manual
  # only:
  #   refs:
  #     - master

add-public-key-to-machines:
  stage: deploy
  tags:
    - docker
  image: $DEPLOYMENT_DOCKER
  script:
    - cd deployment/
    - cp ~/.ssh/id_rsa.pub .
    - ./add-public-key.sh
        --server $SSH_PROXY_IP
        --user $SSH_PROXY_SERVER_USER
        --pass $SSH_PROXY_SERVER_PASS
        --no-check-fingerprint
    - scp ./add-public-key.sh ./id_rsa.pub ${SSH_PROXY_SERVER_USER}@${SSH_PROXY_IP}:/tmp/
    - ssh ${SSH_PROXY_SERVER_USER}@${SSH_PROXY_IP} "/tmp/add-public-key.sh --server $SERVER_PROD_IP --user $SERVER_PROD_USER --pass $SERVER_PROD_PASS --no-check-fingerprint"
  when: manual
  # only:
  #   refs:
  #     - master

build-test-image:
  stage: prepare
  image: docker:19.03.5
  services:
    - docker:19.03.5-dind
  tags:
    - docker
  script:
    - cd test/
    - docker build -t $TEST_IMAGE .
    - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin $DOCKER_REGISTRY
    - docker push $TEST_IMAGE
  when: manual

build:
  stage: build
  image: docker/compose:1.25.4
  services:
    - docker:19.03.5-dind
  tags:
    - docker
  before_script:
    - export API_VERSION="snapshot-${CI_COMMIT_SHA}"
  script:
    - docker-compose build
    - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin $DOCKER_REGISTRY
    - docker-compose push

test:
  stage: test
  image: docker/compose:1.25.4
  services:
    - docker:19.03.5-dind
  tags:
    - docker
  before_script:
    - export API_VERSION="snapshot-${CI_COMMIT_SHA}"
  script:
    - docker-compose pull
    - docker-compose up -d --no-build
    - cd test/
    - docker run --net host -v `pwd`/test.py:/tmp/test.py $TEST_IMAGE /tmp/test.py

release:
  stage: release
  image: docker/compose:1.25.4
  services:
    - docker:19.03.5-dind
  tags:
    - docker
  before_script:
    - export API_VERSION="snapshot-${CI_COMMIT_SHA}"
  script:
    - docker-compose pull api
    - docker tag ${API_IMAGE_NAME}:${API_VERSION} ${API_IMAGE_NAME}:${API_IMAGE_RELEASE_VERSION}
    - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin $DOCKER_REGISTRY
    - docker push ${API_IMAGE_NAME}:${API_IMAGE_RELEASE_VERSION}
  # only:
  #   refs:
  #     - master

setup-infra:
  stage: deploy
  tags:
    - docker
  image: $DEPLOYMENT_DOCKER
  script:
    - cd deployment/ansible/
    - ansible-playbook infra.yml -i inventory.yml --extra-vars "sudo_pass=${SERVER_PROD_PASS}"
  when: manual
  # only:
  #   refs:
  #     - master

deploy:
  stage: deploy
  tags:
    - docker
  image: $DEPLOYMENT_DOCKER
  script:
    - cd deployment/ansible/
    - ansible-playbook deploy.yml -i inventory.yml --extra-vars "sudo_pass=${SERVER_PROD_PASS}" -vvv
  # only:
  #   refs:
  #     - master